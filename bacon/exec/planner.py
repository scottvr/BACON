def planner(state):
    # For now, we'll hardcode a tool call based on memory usage.
    # Later, this will be generated by an LLM.
    if "substrate" in state["messages"][-1]:
        # This is a naive check for demonstration purposes.
        if state["messages"][-1]["substrate"]["memory_percent"] > 80:
            tool_call = {
                "tool": "read_file",
                "params": {"filename": "test.txt"}
            }
        else:
            tool_call = {
                "tool": "read_file",
                "params": {"filename": "test.txt"}
            }
    else:
        tool_call = {
            "tool": "read_file",
            "params": {"filename": "test.txt"}
        }
    return {"messages": [tool_call]}