def planner(state):

    # For now, we'll hardcode a sequence of tool calls.
    # Later, this will be generated by an LLM.
    if len(state["messages"]) == 1:
        tool_call = {
            "tool": "save_to_memory",
            "params": {"document": "Jules is a software engineer."}
        }
    else:
        tool_call = {
            "tool": "retriever",
            "params": {"query": "who is Jules"}

    if "substrate" in state["messages"][-1]:
        # This is a naive check for demonstration purposes.
        if state["messages"][-1]["substrate"]["memory_percent"] > 80:
            tool_call = {
                "tool": "read_file",
                "params": {"filename": "test.txt"}
            }
        else:
            tool_call = {
                "tool": "read_file",
                "params": {"filename": "test.txt"}
            }
    else:
        tool_call = {
            "tool": "read_file",
            "params": {"filename": "test.txt"}
        }
    return {"messages": [tool_call]}