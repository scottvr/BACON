# YAML definition of the LangGraph-style flow for BACON: 
# Bicameral Agent with Compute-aware Orchestration and Navigation

nodes:
  - id: planner
    type: llm
    description: High-level reasoning and task decomposition
    model: openai:gpt-4
    config:
      temperature: 0.3
      prompt_file: bacon/prompts/planner_prompt.md
    middleware:
      - observability_tracer

  - id: substrate_sense
    type: function
    description: Runtime awareness of system resource limits
    inputs: [worker]
    function: get_system_metrics
    config:
      library: psutil
    middleware:
      - observability_tracer

  - id: worker
    type: llm
    description: Task executor using tools and generated code
    model: openai:gpt-4
    config:
      temperature: 0.5
      tools:
        - name: code_exec
          type: function
          function: run_python_code
        - name: http_get
          type: function
          function: perform_http_get
        - name: cli_exec
          type: function
          function: run_cli_command
    middleware:
      - observability_tracer

  - id: feedback_loop
    type: llm
    description: Self-reflection and replanning based on tool outputs and system state
    model: openai:gpt-4
    inputs: [substrate_sense, retriever]
    config:
      temperature: 0.2
      prompt_file: bacon/prompts/feedback_loop_prompt.md
    middleware:
      - observability_tracer

  - id: observability_tracer
    type: middleware
    description: Trace LangGraph steps with LangSmith and OTel
    config:
      langsmith: true
      opentelemetry: true

edges:
  - from: planner
    to: worker
  - from: worker
    to: substrate_sense
  - from: substrate_sense
    to: feedback_loop

entry_point: planner